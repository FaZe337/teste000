# CLI Settings - For Non-Overlay Version Of Patience
# I Would Recommend Using A Search Feature In Your Text Editor - Lots Of Lines, Might Get Confusing
# Index (In Order): Settings + Experimental Settings, Players (Glow/Sense, Spectators), Viewmodel (Glow), Misc (Movement, Skinchanger), Items (Item Glow, Lots Of Options (Thats why its at the bottom))

# --------------- Conditions & Important Info ---------------
# For Colors, Use This Website (https://antongerdelan.net/colour/), Use The Color Picker And Copy The Value Under "RGB 0.0-1.0 float (3 s.f.)", Then Paste It Into The {} Brackets.
# For keycodes, Read KeyCodes.txt

# CLI Settings
bool CLI_CheckFile = true; # [true/false] Checks If This File Has Been Modified (Saved) Before Loading Settings To Save Performance
int CLI_InfoDelay = 2; # Delay Between Loading Settings From This File And Outputting Core Information (Settings Updated, Processing Speed & More)

# --------------- Start Of Features ---------------

# --------------- Start Of Settings ---------------

int SETTINGS_CheatMode = 1; # [0-1] 0 = Performance, 1 = Quality. Performance = Loops Through 70 Players (Firing Range Loops Through 10000, Same As Quality)
bool SETTINGS_FPSCap = false; # [true/false] Caps The Frame Rate Of Each Thread To A Certain Amount Of FPS. Recommened: false (VSync).
int SETTINGS_CoreFPS = 144; # [30+] FPS At Which The Core Thread Runs At. Affects Level, LocalPlayer, Entity And Features!
int SETTINGS_LocalFPS = 144; # [30+] FPS At Which The Local Thread Runs At. Affects Movement & Skin Changer Features!
# EXPERIMENTAL SETTINGS/FEATURES
int SETTINGS_ResetMode = 0; # [0-1] 0 = In One Go, 1 = In Chunks. All In One Go May Experience Micro-Stutters/Increase In CPU Usage, In Chunks May Experience Increase In CPU Usage
int SETTINGS_ResetDelay = 3; # [1+] In Seconds
int SETTINGS_ChunkResetDelay = 1000; # [1+] In Miliseconds (SETTINGS_ResetMode = 1)

# --------------- End Of Settings ---------------

# --------------- Start Of Players ---------------

bool PLAYERS_PlayerGlow = false; # [true/false] Enables A Glow Effect On Players
bool PLAYERS_KnockedCheck = true; # [true/false] Changes Glow Color If Player Is Knocked
bool PLAYERS_VisibleCheck = true; # [true/false] Changes Glow Color If Player Is Visible
bool PLAYERS_VisibleOnly = false; # [true/false] Only Glows Visible Players, Players Behind Walls Will Be Invisible
int PLAYERS_MaxDistance = 200; # [1++] Max Distance (In Meters) For Glow To Be Applied On Players
# Styling
int PLAYERS_BodyStyle = 4; # [0-5] 0 = None, 1 = Solid, 2 = Light, 3 = Light, Visible Only, 4 = Light, Invisible Only, 5 = Wireframe
bool PLAYERS_Outline = true; # [true/false] Applies A Glowing Outline Around The Player
int PLAYERS_OutlineThickness = 64; # [32-255] Thickness Of Glowing Outline Around The Player
# Colors
int PLAYERS_ColorMode = 0; # [0-3] 0 = Shield Based, 1 = Visibility Based, 2 = Team ID Based (Will Not Work If Custom Item Glow Is Enabled), 3 = Rainbow
float[3] PLAYERS_InvisibleColor = { 1.0, 0.0, 0.0 }; # Color Of Invisible Players (PLAYERS_ColorMode = 1)
float[3] PLAYERS_VisibleColor = { 0.0, 1.0, 0.0 }; # Color Of Visible Players (PLAYERS_VisibleCheck = true)
float[3] PLAYERS_KnockedColor = { 0.99, 0.67, 0.12 }; # Color Of Knocked Players (PLAYERS_KnockedCheck = true)

int PLAYERS_ShieldColorMode = 1; # [0-1] 0 = Max Shield, 1 = Current Shield
float[3] PLAYERS_MythicShieldColor = { 0.9, 0, 0 }; # Color Of Players With Mythic (Red) Shield
float[3] PLAYERS_EpicShieldColor = { 0.663, 0.176, 0.973 }; # Color Of Players With Epic (Purple) Shield
float[3] PLAYERS_RareShieldColor = { 0.157, 0.769, 1.0 }; # Color Of Players With Rare (Blue) Shield
float[3] PLAYERS_CommonShieldColor = { 0.502, 0.502, 0.502 }; # Color Of Players With Common (Grey) Shield
float[3] PLAYERS_CrackedShieldColor = { 1, 1, 0 }; # # Color Of Players With No Shield/Cracked/Low Health

int PLAYERS_RainbowSpeed = 100; # [100+] Rainbow Mode Speed (PLAYERS_ColorMode = 3)
int PLAYERS_RainbowDelay = 10; # [1+] Rainbow Mode Delay (PLAYERS_ColorMode = 3)

# Misc
bool PLAYERS_SpectatorList = true; # [true/false] Outputs If You Are Being Spectated - Amount & Player Name

# --------------- End Of Players ---------------

# --------------- Start Of Triggerbot ---------------

bool TRIGGERBOT_Enabled = false; # [true/false] Automatically Shoots When A Enemy Enters Your Crosshair
bool TRIGGERBOT_ReloadCheck = true; # [true/false] Checks If The Gun Is Reloading And Wont Fire. Recommended.
bool TRIGGERBOT_ReadyCheck = true; # [true/false] Checks If The Gun Can Be Fired. Example: For The Peacekeeper, It Will Wait For You To Cycle The Action (Pump/Load) Before Firing. Recommended.
bool TRIGGERBOT_OuputResults = true; # [true/false] Outputs Results After Firing
int TRIGGERBOT_DelayMethod = 1; #[0-1] How Triggerbot Handles Delaying. Duration Requires You To Keep Aiming At Your Target. Thread May Decrease Performance!

bool TRIGGERBOT_FilterWeapons = false; # [true/false] Filters Settings & Binds Based On Current Weapon Category
# No Filter Binds
int TRIGGERBOT_BindMethod = 0; # [0-1] 0 = Memory, 1 = Keybind
bool TRIGGERBOT_Hipfire = false; # [true/false] Triggerbot Will Activate When Not ADS. (TRIGGERBOT_BindMethod = 0)
bool TRIGGERBOT_ShotgunPriority = true; [true/false] Triggerbot Will Activate When Not ADS For Shotguns. (TRIGGERBOT_BindMethod = 0)
bool TRIGGERBOT_ADS = true; [true/false] Triggerbot Will Activate When ADS. (TRIGGERBOT_BindMethod = 0)
keycode TRIGGERBOT_Keybind = MOUSE_Right; # Triggerbot (No Filtered Weapons) Keybind (TRIGGERBOT_BindMethod = 1)
# No Filter Delay Settings
int TRIGGERBOT_FireDelay = 50; # [1+] Delay Between The Player Being Aimed At & The Triggerbot Sending An Input.
int TRIGGERBOT_AfterDelay = 200; # [1+] Delay After The Triggerbot Sending An Input Before It Tries To Send Another.
int TRIGGERBOT_HipfireDistance = 30; # [1+] Max Hipfire Distance
int TRIGGERBOT_ZoomDistance = 100; # [1+] Max Zoom (ADS) Distance
# Filter Settings
# Assualt Rifles
bool TRIGGERBOT_Havoc = false; # [true/false]
bool TRIGGERBOT_Flatline = false; # [true/false]
bool TRIGGERBOT_Hemlock = false; # [true/false]
bool TRIGGERBOT_R301 = false; # [true/false]
bool TRIGGERBOT_Nemesis = false; # [true/false]
int TRIGGERBOT_ARs_BindMethod = 0; # [0-1] 0 = Memory, 1 = Keybind
bool TRIGGERBOT_ARs_Hipfire = false; # [true/false] Triggerbot Will Activate When Not ADS. (TRIGGERBOT_ARs_BindMethod = 0)
bool TRIGGERBOT_ARs_ADS = true; [true/false] Triggerbot Will Activate When ADS. (TRIGGERBOT_ARs_BindMethod = 0)
keycode TRIGGERBOT_ARs_Keybind = MOUSE_Right; # Triggerbot (No Filtered Weapons) Keybind (TRIGGERBOT_ARs_BindMethod = 1)
int TRIGGERBOT_ARs_FireDelay = 50; # [1+] Delay Between The Player Being Aimed At & The Triggerbot Sending An Input.
int TRIGGERBOT_ARs_AfterDelay = 200; # [1+] Delay After The Triggerbot Sending An Input Before It Tries To Send Another.
int TRIGGERBOT_ARs_HipfireDistance = 30; # [1+] Max Hipfire Distance
int TRIGGERBOT_ARs_ZoomDistance = 100; # [1+] Max Zoom (ADS) Distance
# Sub-Machine Guns
bool TRIGGERBOT_Alternator = false; # [true/false]
bool TRIGGERBOT_Prowler = false; # [true/false]
bool TRIGGERBOT_R99 = false; # [true/false]
bool TRIGGERBOT_Volt = false; # [true/false]
bool TRIGGERBOT_CAR = false; # [true/false]
int TRIGGERBOT_SMGs_BindMethod = 0; # [0-1] 0 = Memory, 1 = Keybind
bool TRIGGERBOT_SMGs_Hipfire = false; # [true/false] Triggerbot Will Activate When Not ADS. (TRIGGERBOT_SMGs_BindMethod = 0)
bool TRIGGERBOT_SMGs_ADS = true; [true/false] Triggerbot Will Activate When ADS. (TRIGGERBOT_SMGs_BindMethod = 0)
keycode TRIGGERBOT_SMGs_Keybind = MOUSE_Right; # Triggerbot (No Filtered Weapons) Keybind (TRIGGERBOT_SMGs_BindMethod = 1)
int TRIGGERBOT_SMGs_FireDelay = 50; # [1+] Delay Between The Player Being Aimed At & The Triggerbot Sending An Input.
int TRIGGERBOT_SMGs_AfterDelay = 200; # [1+] Delay After The Triggerbot Sending An Input Before It Tries To Send Another.
int TRIGGERBOT_SMGs_HipfireDistance = 30; # [1+] Max Hipfire Distance
int TRIGGERBOT_SMGs_ZoomDistance = 100; # [1+] Max Zoom (ADS) Distance
# Light-Machine Guns
bool TRIGGERBOT_Devotion = false; # [true/false]
bool TRIGGERBOT_LSTAR = false; # [true/false]
bool TRIGGERBOT_Spitfire = false; # [true/false]
bool TRIGGERBOT_Rampage = false; # [true/false]
int TRIGGERBOT_LMGs_BindMethod = 0; # [0-1] 0 = Memory, 1 = Keybind
bool TRIGGERBOT_LMGs_Hipfire = false; # [true/false] Triggerbot Will Activate When Not ADS. (TRIGGERBOT_LMGs_BindMethod = 0)
bool TRIGGERBOT_LMGs_ADS = true; [true/false] Triggerbot Will Activate When ADS. (TRIGGERBOT_LMGs_BindMethod = 0)
keycode TRIGGERBOT_LMGs_Keybind = MOUSE_Right; # Triggerbot (No Filtered Weapons) Keybind (TRIGGERBOT_LMGs_BindMethod = 1)
int TRIGGERBOT_LMGs_FireDelay = 50; # [1+] Delay Between The Player Being Aimed At & The Triggerbot Sending An Input.
int TRIGGERBOT_LMGs_AfterDelay = 200; # [1+] Delay After The Triggerbot Sending An Input Before It Tries To Send Another.
int TRIGGERBOT_LMGs_HipfireDistance = 30; # [1+] Max Hipfire Distance
int TRIGGERBOT_LMGs_ZoomDistance = 100; # [1+] Max Zoom (ADS) Distance
# Marksman Weapons
bool TRIGGERBOT_G7 = true; # [true/false]
bool TRIGGERBOT_TripleTake = true; # [true/false]
bool TRIGGERBOT_Repeater = true; # [true/false]
bool TRIGGERBOT_Bocek = false; # [true/false]
int TRIGGERBOT_Marksman_BindMethod = 0; # [0-1] 0 = Memory, 1 = Keybind
bool TRIGGERBOT_Marksman_Hipfire = false; # [true/false] Triggerbot Will Activate When Not ADS. (TRIGGERBOT_Marksman_BindMethod = 0)
bool TRIGGERBOT_Marksman_ADS = true; [true/false] Triggerbot Will Activate When ADS. (TRIGGERBOT_Marksman_BindMethod = 0)
keycode TRIGGERBOT_Marksman_Keybind = MOUSE_Right; # Triggerbot (No Filtered Weapons) Keybind (TRIGGERBOT_Marksman_BindMethod = 1)
int TRIGGERBOT_Marksman_FireDelay = 100; # [1+] Delay Between The Player Being Aimed At & The Triggerbot Sending An Input.
int TRIGGERBOT_Marksman_AfterDelay = 200; # [1+] Delay After The Triggerbot Sending An Input Before It Tries To Send Another.
int TRIGGERBOT_Marksman_HipfireDistance = 30; # [1+] Max Hipfire Distance
int TRIGGERBOT_Marksman_ZoomDistance = 100; # [1+] Max Zoom (ADS) Distance
# Sniper Rifles
bool TRIGGERBOT_Longbow = true; # [true/false]
bool TRIGGERBOT_ChargeRifle = false; # [true/false]
bool TRIGGERBOT_Sentinel = true; # [true/false]
bool TRIGGERBOT_Kraber = true; # [true/false]
int TRIGGERBOT_Snipers_BindMethod = 0; # [0-1] 0 = Memory, 1 = Keybind
bool TRIGGERBOT_Snipers_Hipfire = false; # [true/false] Triggerbot Will Activate When Not ADS. (TRIGGERBOT_Snipers_BindMethod = 0)
bool TRIGGERBOT_Snipers_ADS = true; [true/false] Triggerbot Will Activate When ADS. (TRIGGERBOT_Snipers_BindMethod = 0)
keycode TRIGGERBOT_Snipers_Keybind = MOUSE_Right; # Triggerbot (No Filtered Weapons) Keybind (TRIGGERBOT_Snipers_BindMethod = 1)
int TRIGGERBOT_Snipers_FireDelay = 100; # [1+] Delay Between The Player Being Aimed At & The Triggerbot Sending An Input.
int TRIGGERBOT_Snipers_AfterDelay = 200; # [1+] Delay After The Triggerbot Sending An Input Before It Tries To Send Another.
int TRIGGERBOT_Snipers_HipfireDistance = 30; # [1+] Max Hipfire Distance
int TRIGGERBOT_Snipers_ZoomDistance = 100; # [1+] Max Zoom (ADS) Distance
# Pistols
bool TRIGGERBOT_P2020 = false; # [true/false]
bool TRIGGERBOT_RE45 = false; # [true/false]
bool TRIGGERBOT_Wingman = true; # [true/false]
int TRIGGERBOT_Pistols_BindMethod = 0; # [0-1] 0 = Memory, 1 = Keybind
bool TRIGGERBOT_Pistols_Hipfire = false; # [true/false] Triggerbot Will Activate When Not ADS. (TRIGGERBOT_Pistols_BindMethod = 0)
bool TRIGGERBOT_Pistols_ADS = true; [true/false] Triggerbot Will Activate When ADS. (TRIGGERBOT_Pistols_BindMethod = 0)
keycode TRIGGERBOT_Pistols_Keybind = MOUSE_Right; # Triggerbot (No Filtered Weapons) Keybind (TRIGGERBOT_Pistols_BindMethod = 1)
int TRIGGERBOT_Pistols_FireDelay = 100; # [1+] Delay Between The Player Being Aimed At & The Triggerbot Sending An Input.
int TRIGGERBOT_Pistols_AfterDelay = 200; # [1+] Delay After The Triggerbot Sending An Input Before It Tries To Send Another.
int TRIGGERBOT_Pistols_HipfireDistance = 30; # [1+] Max Hipfire Distance
int TRIGGERBOT_Pistols_ZoomDistance = 100; # [1+] Max Zoom (ADS) Distance
# Shotguns
bool TRIGGERBOT_EVA8 = true; # [true/false]
bool TRIGGERBOT_Mastiff = true; # [true/false]
bool TRIGGERBOT_Mozambique = true; # [true/false]
bool TRIGGERBOT_Peacekeeper = true; # [true/false]
int TRIGGERBOT_Shotguns_BindMethod = 0; # [0-1] 0 = Memory, 1 = Keybind
bool TRIGGERBOT_Shotguns_Hipfire = true; # [true/false] Triggerbot Will Activate When Not ADS. (TRIGGERBOT_Shotguns_BindMethod = 0)
bool TRIGGERBOT_Shotguns_ADS = true; [true/false] Triggerbot Will Activate When ADS. (TRIGGERBOT_Shotguns_BindMethod = 0)
keycode TRIGGERBOT_Shotguns_Keybind = MOUSE_Right; # Triggerbot (No Filtered Weapons) Keybind (TRIGGERBOT_Shotguns_BindMethod = 1)
int TRIGGERBOT_Shotguns_FireDelay = 80; # [1+] Delay Between The Player Being Aimed At & The Triggerbot Sending An Input.
int TRIGGERBOT_Shotguns_AfterDelay = 200; # [1+] Delay After The Triggerbot Sending An Input Before It Tries To Send Another.
int TRIGGERBOT_Shotguns_HipfireDistance = 30; # [1+] Max Hipfire Distance
int TRIGGERBOT_Shotguns_ZoomDistance = 100; # [1+] Max Zoom (ADS) Distance

# --------------- End Of Triggerbot ---------------

# --------------- Start Of Viewmodel ---------------

bool VIEWMODEL_ViewmodelGlow = false; # [true/false] Applies A Glow Effect Onto Your Viewmodel (Weapon)
int VIEWMODEL_BodyStyle = 3; # [0-7] 0 = None, 1 = Flat, 2 = Light, 3 = Light (Darker), 4 = Slow Pulsing (Faded), 5 = Slow Pulsing, 6 = Light (Pulsing), 7 = Fuzzy
bool VIEWMODEL_GlowOutline = true; # [true/false] Applies A Glowing Outline Around The Player
int VIEWMODEL_OutlineThickness = 64; # [32-255] Thickness Of Glowing Outline Around The Player

# Colors
int VIEWMODEL_ColorMode = 0; # [0-4] 0 = Single, 1 = Rainbow, 2 = Visible Warning, 3 = Spectator Warning, 4 = Low HP Warning
float[3] VIEWMODEL_GlowColor = { 0.663, 0.176, 0.973 }; # Main Color Of Your Viewmodel
int VIEWMODEL_RainbowSpeed = 100; # [100+] Rainbow Mode Speed (VIEWMODEL_ColorMode = 1)
int VIEWMODEL_RainbowDelay = 10; # [1+] Rainbow Mode Delay (VIEWMODEL_ColorMode = 1)
float[3] VIEWMODEL_VisibleWarningColor = { 0.0, 1.0, 0.0 }; # Visible Warning Color (VIEWMODEL_ColorMode = 2)
float[3] VIEWMODEL_SpectatorWarningColor = { 0.651, 0.090, 1.00 }; # Spectator Warning Color (VIEWMODEL_ColorMode = 3)
int VIEWMODEL_HPWarningThreshold = 100; # How Many HP (HP = Hit Points = Health + Shield) You Have For The Color To Change (VIEWMODEL_ColorMode = 4)
float[3] VIEWMODEL_HPWarningColor = { 1.0, 1.0, 0.0 }; # Low HP (HP = Hit Points = Health + Shield) Warning Color (VIEWMODEL_ColorMode = 4)

# --------------- End Of Viewmodel ---------------

# --------------- Start Of Misc ---------------

# Movement
bool MOVEMENT_SuperGlide = true; # [true/false] Whilst Holding MOVEMENT_SuperGlideKey Over A Climbable Object (e.g. Wall, Ledge), You Will Perform A "SuperGlide" (Gain Extra Mobility)
keycode MOVEMENT_SuperGlideKey = KEYBOARD_SPACE; # MOVEMENT_SuperGlide Activation Keybind (Recommended: Your In-Game Vault Keybind)
bool MOVEMENT_WallJump = false; # [true/false] # Please Watch A Video On What Is/How To Wall Jump First, Since I Can't Really Explain It
keycode MOVEMENT_WallJumpKey = KEYBOARD_X; # MOVEMENT_WallJump Activation Keybind - Hold This When Trying To Perform A Wall Jump

# Skinchanger - For The Local Player - Not A Model Changer (No Heirlooms!)
# Toggles For Each Legend/Weapon, Desired Skin IDs For Each Legend
# 0 = Default Skin (Your Equipped Skin)
# [!] Note: Going Above Max Values Will Either Set The Default Skin Or Crash Game!
# Legends
bool SKINCHANGER_LegendSkin = false; # [true/false] Enables Skin Changer For Legend Skins
# Assault Legends
bool SKINCHANGER_Bangalore = false; # [true/false]
int SKINCHANGER_BangaloreID = 15; # [0-25]
bool SKINCHANGER_Fuze = false; # [true/false]
int SKINCHANGER_FuzeID = 5; # [0-22]
bool SKINCHANGER_Ash = false; # [true/false]
int SKINCHANGER_AshID = 17; # [0-18]
bool SKINCHANGER_MadMaggie = false; # [true/false]
int SKINCHANGER_MadMaggieID = 6; # [0-16]
bool SKINCHANGER_Ballistic = false; # [true/false]
int SKINCHANGER_BallisticID = 3; # [0-11]
# Skirmisher Legends
bool SKINCHANGER_Pathfinder = false; # [true/false]
int SKINCHANGER_PathfinderID = 8; # [0-25]
bool SKINCHANGER_Wraith = false; # [true/false]
int SKINCHANGER_WraithID = 25; # [0-28]
bool SKINCHANGER_Octane = false; # [true/false]
int SKINCHANGER_OctaneID = 30; # [0-34]
bool SKINCHANGER_Revanant = false; # [true/false]
int SKINCHANGER_RevanantID = 3; # [0-4]
bool SKINCHANGER_Horizon = false; # [true/false]
int SKINCHANGER_HorizonID = 22; # [0-23]
bool SKINCHANGER_Valkyrie = false; # [true/false]
int SKINCHANGER_ValkyrieID = 11; # [0-24]
bool SKINCHANGER_Alter = false; # [true/false]
int SKINCHANGER_AlterID = 5; # [0-9]
# Recon Legends
bool SKINCHANGER_Bloodhound = false; # [true/false]
int SKINCHANGER_BloodhoundID = 26; # [0-27]
bool SKINCHANGER_Crypto = false; # [true/false]
int SKINCHANGER_CryptoID = 13; # [0-22]
bool SKINCHANGER_Seer = false; # [true/false]
int SKINCHANGER_SeerID = 9; # [0-23]
bool SKINCHANGER_Vantage = false; # [true/false]
int SKINCHANGER_VantageID = 8; # [0-14]
# Support
bool SKINCHANGER_Gibraltar = false; # [true/false]
int SKINCHANGER_GibraltarID = 6; # [0-21]
bool SKINCHANGER_Lifeline = false; # [true/false]
int SKINCHANGER_LifelineID = 25; # [0-27]
bool SKINCHANGER_Mirage = false; # [true/false]
int SKINCHANGER_MirageID = 27; # [0-27]
bool SKINCHANGER_Loba = false; # [true/false]
int SKINCHANGER_LobaID = 21; # [0-27]
bool SKINCHANGER_Newcastle = false; # [true/false]
int SKINCHANGER_NewcastleID = 10; # [0-15]
bool SKINCHANGER_Conduit = false; # [true/false]
int SKINCHANGER_ConduitID = 7; # [0-9]
# Controller
bool SKINCHANGER_Caustic = false; # [true/false]
int SKINCHANGER_CausticID = 20; # [0-26]
bool SKINCHANGER_Wattson = false; # [true/false]
int SKINCHANGER_WattsonID = 24; # [0-24]
bool SKINCHANGER_Rampart = false; # [true/false]
int SKINCHANGER_RampartID = 17; # [0-21]
bool SKINCHANGER_Catalyst = false; # [true/false]
int SKINCHANGER_CatalystID = 11; # [0-13]
# Weapons
bool SKINCHANGER_WeaponSkin = false; # [true/false] Enables Skin Changer For Weapon Skins
# 1-6 = Epic Skins, 7-MAX = Good Skins
# Light Weapons
bool SKINCHANGER_P2020 = false; # [true/false]
int SKINCHANGER_P2020ID = 7; # [0-11]
bool SKINCHANGER_RE45 = false; # [true/false]
int SKINCHANGER_RE45ID = 7; # [0-16]
bool SKINCHANGER_Alternator = false; # [true/false]
int SKINCHANGER_AlternatorID = 7; # [0-17]
bool SKINCHANGER_R99 = false; # [true/false]
int SKINCHANGER_R99ID = 7; # [0-20]
bool SKINCHANGER_R301 = false; # [true/false]
int SKINCHANGER_R301ID = 7; # [0-18]
bool SKINCHANGER_Spitfire = false; # [true/false]
int SKINCHANGER_SpitfireID = 7; # [0-18]
bool SKINCHANGER_G7 = false; # [true/false]
int SKINCHANGER_G7ID = 7; # [0-22]
# Heavy Weapons
bool SKINCHANGER_Flatline = false; # [true/false]
int SKINCHANGER_FlatlineID = 7; # [0-21]
bool SKINCHANGER_Hemlock = false; # [true/false]
int SKINCHANGER_HemlockID = 7; # [0-18]
bool SKINCHANGER_Prowler = false; # [true/false]
int SKINCHANGER_ProwlerID = 7; # [0-16]
bool SKINCHANGER_Repeater = false; # [true/false]
int SKINCHANGER_RepeaterID = 7; # [0-13]
bool SKINCHANGER_Rampage = false; # [true/false]
int SKINCHANGER_RampageID = 7; # [0-13]
bool SKINCHANGER_CAR = false; # [true/false]
int SKINCHANGER_CARID = 7; # [0-16]
# Energy Weapons
bool SKINCHANGER_Havoc = false; # [true/false]
int SKINCHANGER_HavocID = 7; # [0-15]
bool SKINCHANGER_LSTAR = false; # [true/false]
int SKINCHANGER_LSTARID = 7; # [0-13]
bool SKINCHANGER_TripleTake = false; # [true/false]
int SKINCHANGER_TripleTakeID = 7; # [0-13]
bool SKINCHANGER_Volt = false; # [true/false]
int SKINCHANGER_VoltID = 7; # [0-16]
bool SKINCHANGER_Nemesis = false; # [true/false]
int SKINCHANGER_NemesisID = 7; # [0-10]
# Shotguns
bool SKINCHANGER_Mozambique = false; # [true/false]
int SKINCHANGER_MozambiqueID = 7; # [0-8]
bool SKINCHANGER_Peacekeeper = false; # [true/false]
int SKINCHANGER_PeacekeeperID = 7; # [0-17]
bool SKINCHANGER_Mastiff = false; # [true/false]
int SKINCHANGER_MastiffID = 7; # [0-14]
# Snipers
bool SKINCHANGER_Wingman = false; # [true/false]
int SKINCHANGER_WingmanID = 7; # [0-18]
bool SKINCHANGER_Longbow = false; # [true/false]
int SKINCHANGER_LongbowID = 7; # [0-16]
bool SKINCHANGER_ChargeRifle = false; # [true/false]
int SKINCHANGER_ChargeRifleID = 7; # [0-11]
bool SKINCHANGER_Sentinel = false; # [true/false]
int SKINCHANGER_SentinelID = 7; # [0-12]
# Mythic
bool SKINCHANGER_EVA8 = false; # [true/false]
int SKINCHANGER_EVA8ID = 7; # [0-14]
bool SKINCHANGER_Devotion = false; # [true/false]
int SKINCHANGER_DevotionID = 7; # [0-19]
bool SKINCHANGER_Bocek = false; # [true/false]
int SKINCHANGER_BocekID = 7; # [0-10]
bool SKINCHANGER_Kraber = false; # [true/false]
int SKINCHANGER_KraberID = 7; # [0-7]

# --------------- End Of Misc ---------------

# --------------- Start Of Items ---------------

# Item Glow
bool ITEMS_ItemGlow = false; # [true/false] Applies A Glow Effect To Items
bool ITEMS_CustomGlow = false; # [true/false] false = Glows Based On Rarity, true = Custom Glow (100+ Items)
# [!] Note: For Custom Glow To Work, SETTINGS_CheatMode = 1

# Styling (Simple + Custom Glow)
bool ITEMS_GlowOutline = true; # [true/false] Applies A Glowing Outline Around The Item
int ITEMS_OutlineThickness = 32; # [32-255] Thickness Of Glowing Outline Around The Viewmodel

# Simple Glow Settings + Styling (ITEMS_CustomGlow = false)
int ITEMS_SimpleBodyStyle = 1; # [0=2] 0 = None, 1 = Light, 2 = Solid
# Simple Glow Toggles/Filter
bool ITEMS_SimpleWeapons = false; # [true/false] Glow Weapons
bool ITEMS_SimpleAmmo = false; # [true/false] Glow Ammo
bool ITEMS_SimpleCommon = false; # [true/false] Glow Common Items (Consumables, Attachments, Gear & More)
bool ITEMS_SimpleRare = false; # [true/false] Glow Rare Items (Consumables, Attachments, Gear & More)
bool ITEMS_SimpleEpic = true; # [true/false] Glow Epic Items (Consumables, Attachments, Gear & More)
bool ITEMS_SimpleGold = true; # [true/false] Glow Gold Items (Attachments, Gear & More)
bool ITEMS_SimpleMythic = true; # [true/false] Glow Mythic Items (Mythic Weapons, Treasure Boxes & More)

# Custom Glow Settings + Styling (ITEMS_CustomGlow = true)

int ITEMS_BodyStyle = 1; # 0 = None, 1 = Light, No Fill, 2 = Light, Filled, 3 = Light, Pulsing, 4 = Solid 1, 5 = Solid 2, 6 = Fuzzy
float ITEMS_MaxDistance = 30.0; # [1-999+] Max Range (In Meters) For Items To Glow
# Custom Glow Colors
int ITEMS_ColorMode = 0; # [0-1] 0 = Rarity, 1 = Category
# Rarity Colors
float[3] ITEMS_CommonColor = { 0.502, 0.502, 0.502 }; # Common Items (Consumables, Attachments, Gear & More)
float[3] ITEMS_RareColor = { 0.157, 0.769, 1.0 }; # Rare Items (Consumables, Attachments, Gear & More)
float[3] ITEMS_EpicColor = { 0.663, 0.176, 0.973 }; # Epic Items (Consumables, Attachments, Gear & More)
float[3] ITEMS_GoldColor = { 0.980, 0.831, 0.314 }; # Gold Items (Attachments, Gear & More)
float[3] ITEMS_MythicColor = { 0.812, 0.275, 0.290 }; # Mythic Items (Mythic Weapons, Treasure Boxes & More)
float[3] ITEMS_LightColor = { 0.871, 0.584, 0.31 }; # Light Weapons & Ammo
float[3] ITEMS_HeavyColor = { 0.431, 0.784, 0.686 }; # Rare Weapons & Ammo
float[3] ITEMS_EnergyColor = { 0.482, 0.990, 0.228 }; # Epic Weapons & Ammo
float[3] ITEMS_ShotgunColor = { 0.810, 0.0162, 0.0956 }; # Gold Weapons & Ammo
float[3] ITEMS_SniperColor = { 0.549, 0.525, 0.969 }; # Mythic Weapons
# Category Colors
float[3] ITEMS_WeaponColor = { 0.502, 0.502, 0.502 }; # Weapons
float[3] ITEMS_AmmoColor = { 0.502, 0.502, 0.502 }; # Ammo
float[3] ITEMS_GearColor = { 0.0990, 0.441, 0.990 }; # Gear (Shields, Helmets, Backpacks, Knockdowns)
float[3] ITEMS_OpticColor = { 0.812, 0.0990, 0.990 }; # Optics
float[3] ITEMS_BarrelColor = { 0.952, 0.960, 0.950 }; # Barrels (Stabilizers, Lasers, Shotgun Bolts)
float[3] ITEMS_MagColor = { 0.990, 0.593, 0.139 }; # Magazines
float[3] ITEMS_StockColor = { 0.990, 0.0396, 0.467 }; # Stocks (Standard, Sniper)
float[3] ITEMS_HopupColor = { 0.980, 0.831, 0.314 }; # Hopups
float[3] ITEMS_ConsumableColor = { 0, 1, 0 }; # Consumables (Phoenix, Medkit, Syringe, Shield Battery + Cell)
float[3] ITEMS_ThrowableColor = { 0.502, 0.502, 0.502 }; # Throwables (Thermite, Frag, Arc Star)
float[3] ITEMS_SurvivalColor = { 0.157, 0.769, 1.0 }; # Survival Items (EVAC Tower, Heat Shield, Mobile Respawn Beacon)
# Custom Glow Toggles/Filters (100+)
# Gear
bool ITEMS_CommonHelmet = false; # [true/false]
bool ITEMS_CommonShield = false; # [true/false]
bool ITEMS_CommonKnockdown = false; # [true/false]
bool ITEMS_CommonBackpack = false; # [true/false]
bool ITEMS_RareHelmet = false; # [true/false]
bool ITEMS_RareShield = false; # [true/false]
bool ITEMS_RareKnockdown = false; # [true/false]
bool ITEMS_RareBackpack = false; # [true/false]
bool ITEMS_EpicHelmet = false; # [true/false]
bool ITEMS_EpicShield = false; # [true/false]
bool ITEMS_EpicKnockdown = false; # [true/false]
bool ITEMS_EpicBackpack = false; # [true/false]
bool ITEMS_GoldHelmet = false; # [true/false]
bool ITEMS_GoldEvoCache = false; # [true/false]
bool ITEMS_GoldKnockdown = false; # [true/false]
bool ITEMS_GoldBackpack = false; # [true/false]
bool ITEMS_MythicShield = false; # [true/false]
# Weapons
# Light
bool ITEMS_P2020 = false; # [true/false]
bool ITEMS_RE45 = false; # [true/false]
bool ITEMS_Alternator = false; # [true/false]
bool ITEMS_R99 = false; # [true/false]
bool ITEMS_R301 = false; # [true/false]
bool ITEMS_Spitfire = false; # [true/false]
bool ITEMS_G7 = false; # [true/false]
# Heavy
bool ITEMS_Flatline = false; # [true/false]
bool ITEMS_Hemlock = false; # [true/false]
bool ITEMS_Prowler = false; # [true/false]
bool ITEMS_Repeater = false; # [true/false]
bool ITEMS_Rampage = false; # [true/false]
bool ITEMS_CARSMG = false; # [true/false]
# Energy
bool ITEMS_Havoc = false; # [true/false]
bool ITEMS_LSTAR = false; # [true/false]
bool ITEMS_TripleTake = false; # [true/false]
bool ITEMS_Volt = false; # [true/false]
bool ITEMS_Nemesis = false; # [true/false]
# Shotgun
bool ITEMS_Mastiff = false; # [true/false]
bool ITEMS_Peacekeeper = false; # [true/false]
bool ITEMS_Mozambique = false; # [true/false]
# Sniper
bool ITEMS_Wingman = false; # [true/false]
bool ITEMS_Longbow = false; # [true/false]
bool ITEMS_ChargeRifle = false; # [true/false]
bool ITEMS_Sentinel = false; # [true/false]
# Mythic
bool ITEMS_EVA8 = false; # [true/false]
bool ITEMS_Devotion = false; # [true/false]
bool ITEMS_Bocek = false; # [true/false]
bool ITEMS_Kraber = false; # [true/false]
bool ITEMS_Knife = false; # [true/false]
# Ammo
bool ITEMS_LightAmmo = false; # [true/false]
bool ITEMS_HeavyAmmo = false; # [true/false]
bool ITEMS_EnergyAmmo = false; # [true/false]
bool ITEMS_ShotgunAmmo = false; # [true/false]
bool ITEMS_SniperAmmo = false; # [true/false]
# Attachments
# Optics
bool ITEMS_HCOG1x = false; # [true/false]
bool ITEMS_HOLO1x = false; # [true/false]
bool ITEMS_HCOG2x = false; # [true/false]
bool ITEMS_HOLO2x = false; # [true/false]
bool ITEMS_HCOG3x = false; # [true/false]
bool ITEMS_AOG4x = false; # [true/false]
bool ITEMS_Sniper6x = false; # [true/false]
bool ITEMS_Sniper8x = false; # [true/false]
bool ITEMS_Sniper10x = false; # [true/false]
# Magazines (Mags)
bool ITEMS_CommonLightMag = false; # [true/false]
bool ITEMS_RareLightMag = false; # [true/false]
bool ITEMS_EpicLightMag = false; # [true/false]
bool ITEMS_GoldLightMag = false; # [true/false]
bool ITEMS_CommonHeavyMag = false; # [true/false]
bool ITEMS_RareHeavyMag = false; # [true/false]
bool ITEMS_EpicHeavyMag = false; # [true/false]
bool ITEMS_GoldHeavyMag = false; # [true/false]
bool ITEMS_CommonEnergyMag = false; # [true/false]
bool ITEMS_RareEnergyMag = false; # [true/false]
bool ITEMS_EpicEnergyMag = false; # [true/false]
bool ITEMS_GoldEnergyMag = false; # [true/false]
bool ITEMS_CommonSniperMag = false; # [true/false]
bool ITEMS_RareSniperMag = false; # [true/false]
bool ITEMS_EpicSniperMag = false; # [true/false]
bool ITEMS_GoldSniperMag = false; # [true/false]
# Hopups
bool ITEMS_TurboCharger = false; # [true/false]
bool ITEMS_DisruptorRounds = false; # [true/false]
bool ITEMS_HammerPointRounds = false; # [true/false]
bool ITEMS_BoostedLoader = false; # [true/false]
# Barrels
bool ITEMS_CommonStabilizer = false; # [true/false]
bool ITEMS_RareStabilizer = false; # [true/false]
bool ITEMS_EpicStabilizer = false; # [true/false]
bool ITEMS_CommonLaser = false; # [true/false]
bool ITEMS_RareLaser = false; # [true/false]
bool ITEMS_EpicLaser = false; # [true/false]
bool ITEMS_CommonShotgunBolt = false; # [true/false]
bool ITEMS_RareShotgunBolt = false; # [true/false]
bool ITEMS_EpicShotgunBolt = false; # [true/false]
bool ITEMS_GoldShotgunBolt = false; # [true/false]
# Stocks
bool ITEMS_CommonStock = false; # [true/false]
bool ITEMS_RareStock = false; # [true/false]
bool ITEMS_EpicStock = false; # [true/false]
bool ITEMS_CommonSniperStock = false; # [true/false]
bool ITEMS_RareSniperStock = false; # [true/false]
bool ITEMS_EpicSniperStock = false; # [true/false]
# Consumables
bool ITEMS_Phoenix = false; # [true/false]
bool ITEMS_Medkit = false; # [true/false]
bool ITEMS_Syringe = false; # [true/false]
bool ITEMS_ShieldBattery = false; # [true/false]
bool ITEMS_ShieldCell = false; # [true/false]
# Throwables
bool ITEMS_Thermite = false; # [true/false]
bool ITEMS_Frag = false; # [true/false]
bool ITEMS_Arc = false; # [true/false]
# Survival Items
bool ITEMS_EVACTower = false; # [true/false]
bool ITEMS_MobileRespawnBeacon = false; # [true/false]
bool ITEMS_HeatShield = false; # [true/false]
# --------------- End Of Items ---------------

# --------------- End Of Features ---------------

# KeyCode Array - For Those With Special Text Editors (e.g. KWrite) To Quickly Change KeyCodes
# { "INPUT_UNKNOWN", "KEYBOARD_1", "KEYBOARD_2", "KEYBOARD_3", "KEYBOARD_4", "KEYBOARD_5", "KEYBOARD_6", "KEYBOARD_7", "KEYBOARD_8", "KEYBOARD_9", "KEYBOARD_0", "KEYBOARD_A", "KEYBOARD_B", "KEYBOARD_C", "KEYBOARD_D", "KEYBOARD_E", "KEYBOARD_F", "KEYBOARD_G", "KEYBOARD_H", "KEYBOARD_I", "KEYBOARD_J", "KEYBOARD_K", "KEYBOARD_L", "KEYBOARD_M", "KEYBOARD_N", "KEYBOARD_O", "KEYBOARD_P", "KEYBOARD_Q", "KEYBOARD_R", "KEYBOARD_S", "KEYBOARD_T", "KEYBOARD_U", "KEYBOARD_V", "KEYBOARD_W", "KEYBOARD_X", "KEYBOARD_Y", "KEYBOARD_Z", "KEYBOARD_F1", "KEYBOARD_F2", "KEYBOARD_F3", "KEYBOARD_F4", "KEYBOARD_F5", "KEYBOARD_F6", "KEYBOARD_F7", "KEYBOARD_F8", "KEYBOARD_F9", "KEYBOARD_F10", "KEYBOARD_F11", "KEYBOARD_F12", "KEYBOARD_CAPS_LOCK", "KEYBOARD_LEFT_SHIFT", "KEYBOARD_LEFT_CTRL", "KEYBOARD_LEFT_ALT", "KEYBOARD_INSERT", "KEYBOARD_DELETE", "KEYBOARD_SPACE", "MOUSE_Left", "MOUSE_Right", "MOUSE_Middle", "MOUSE_X1", "MOUSE_X2", "INPUT_None" };
